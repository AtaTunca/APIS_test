//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.6.9.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace ConsoleApp2
{
#pragma warning disable // Disable all warnings

    /// <summary>
    /// Functional date/time
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FunctionalDateTime
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(3)]
        [System.ComponentModel.DataAnnotations.MaxLength(3)]
        public int[] Date { get; set; } = new int[3];
    
        [Newtonsoft.Json.JsonProperty("time", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(2)]
        [System.ComponentModel.DataAnnotations.MaxLength(2)]
        public int[] Time { get; set; } = new int[2];


    }

    /// <summary>
    /// Provided ISO norm
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ProvidedIsoNorm
    {
        /// <summary>
        /// Provided format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("norm", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ProvidedIsoNormNorm Norm { get; set; }

    }

    /// <summary>
    /// Country code in ISO2 or ISO3 format
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Iso2OrIso3CountryCode
    {
        /// <summary>
        /// Iso2 country code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("iso2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        public string Iso2 { get; set; }

        /// <summary>
        /// Iso3 country code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("iso3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Iso3 { get; set; }

        [Newtonsoft.Json.JsonProperty("inputNormISO", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ProvidedIsoNorm InputNormISO { get; set; } = new ProvidedIsoNorm();

    }

    /// <summary>
    /// Country code in ISO2 format
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Iso2CountryCode
    {
        /// <summary>
        /// Iso2 country code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("iso2", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        public string Iso2 { get; set; }

        [Newtonsoft.Json.JsonProperty("inputNormISO", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ProvidedIsoNorm InputNormISO { get; set; } = new ProvidedIsoNorm();

    }

    /// <summary>
    /// Country code in ISO3 format
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Iso3CountryCode
    {
        /// <summary>
        /// Iso3 country code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("iso3", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Iso3 { get; set; }

        [Newtonsoft.Json.JsonProperty("inputNormISO", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ProvidedIsoNorm InputNormISO { get; set; } = new ProvidedIsoNorm();

    }

    /// <summary>
    /// Provided norm
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ProvidedNorm
    {
        /// <summary>
        /// Provided format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("norm", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ProvidedNormNorm Norm { get; set; }

    }

    /// <summary>
    /// Carrier code in IATA or ICAO format
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class IcaoOrIataCarrierCode
    {
        [Newtonsoft.Json.JsonProperty("norm", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ProvidedNormNorm Norm { get; set; }

        /// <summary>
        /// Code in ICAO format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("icao", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Icao { get; set; }

        /// <summary>
        /// Code in IATA format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("iata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        public string Iata { get; set; }

    }

    /// <summary>
    /// Station code in ICAO or IATA format
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class IcaoOrIataStationCode
    {
        [Newtonsoft.Json.JsonProperty("norm", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ProvidedNormNorm Norm { get; set; }

        /// <summary>
        /// Code in ICAO format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("icao", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
        public string Icao { get; set; }

        /// <summary>
        /// Code in IATA format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("iata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Iata { get; set; }

    }

    /// <summary>
    /// Carrier code in ICAO format
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class IcaoCarrierCode
    {
        [Newtonsoft.Json.JsonProperty("norm", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ProvidedNorm Norm { get; set; } = new ProvidedNorm();

        /// <summary>
        /// Code in ICAO format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("icao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Icao { get; set; }

    }

    /// <summary>
    /// Station code in ICAO format
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class IcaoStationCode
    {
        [Newtonsoft.Json.JsonProperty("norm", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ProvidedNorm Norm { get; set; } = new ProvidedNorm();

        /// <summary>
        /// Code in ICAO format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("icao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
        public string Icao { get; set; }

    }

    /// <summary>
    /// Carrier code in IATA format
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class IataCarrierCode
    {
        [Newtonsoft.Json.JsonProperty("norm", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ProvidedNorm Norm { get; set; } = new ProvidedNorm();

        /// <summary>
        /// Code in IATA format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("iata", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        public string Iata { get; set; }

    }

    /// <summary>
    /// Station code in IATA format
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class IataStationCode
    {
        [Newtonsoft.Json.JsonProperty("norm", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ProvidedNorm Norm { get; set; } = new ProvidedNorm();

        /// <summary>
        /// Code in IATA format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("iata", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Iata { get; set; }

    }

    /// <summary>
    /// Movement designator
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FlightDesignator
    {
        /// <summary>
        /// Movement company code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("companyCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IcaoOrIataCarrierCode CompanyCode { get; set; } = new IcaoOrIataCarrierCode();

        /// <summary>
        /// Movement number
        /// </summary>
        [Newtonsoft.Json.JsonProperty("numberExternal", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength = 1)]
        public string NumberExternal { get; set; }

        /// <summary>
        /// Movement suffix
        /// </summary>
        [Newtonsoft.Json.JsonProperty("suffix", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1, MinimumLength = 1)]
        public string Suffix { get; set; }

    }

    /// <summary>
    /// Flight identifier
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FlightIdentifierScheduledOrEstimated
    {
        /// <summary>
        /// Station
        /// </summary>
        [Newtonsoft.Json.JsonProperty("station", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Station Station { get; set; } = new Station();

        /// <summary>
        /// Scheduled identifiers
        /// </summary>
        [Newtonsoft.Json.JsonProperty("scheduled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Scheduled Scheduled { get; set; }

        /// <summary>
        /// Estimated identifiers
        /// </summary>
        [Newtonsoft.Json.JsonProperty("estimated", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Estimated Estimated { get; set; }

    }

    /// <summary>
    /// Flight identifier with scheduled
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FlightIdentifierScheduled
    {
        /// <summary>
        /// Station
        /// </summary>
        [Newtonsoft.Json.JsonProperty("station", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Station2 Station { get; set; } = new Station2();

        /// <summary>
        /// Scheduled identifiers
        /// </summary>
        [Newtonsoft.Json.JsonProperty("scheduled", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Scheduled2 Scheduled { get; set; } = new Scheduled2();

    }

    /// <summary>
    /// Flight identifier with estimated
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FlightIdentifierEstimated
    {
        /// <summary>
        /// Station
        /// </summary>
        [Newtonsoft.Json.JsonProperty("station", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Station3 Station { get; set; } = new Station3();

        /// <summary>
        /// Estimated identifiers
        /// </summary>
        [Newtonsoft.Json.JsonProperty("estimated", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Estimated2 Estimated { get; set; } = new Estimated2();

    }

    /// <summary>
    /// Document details
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Document
    {
        /// <summary>
        /// Document type
        /// </summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public DocumentType Type { get; set; }

        /// <summary>
        /// Document number
        /// </summary>
        [Newtonsoft.Json.JsonProperty("number", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Number { get; set; }

        /// <summary>
        /// Last name as stated in the travel document
        /// </summary>
        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string LastName { get; set; }

        /// <summary>
        /// First name as stated in the travel document
        /// </summary>
        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string FirstName { get; set; }

        /// <summary>
        /// Second given name as stated in the travel document
        /// </summary>
        [Newtonsoft.Json.JsonProperty("secondGivenName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string SecondGivenName { get; set; }

        /// <summary>
        /// gender
        /// </summary>
        [Newtonsoft.Json.JsonProperty("gender", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public DocumentGender? Gender { get; set; }

        /// <summary>
        /// Date of birth
        /// </summary>
        [Newtonsoft.Json.JsonProperty("dateOfBirth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(3)]
        [System.ComponentModel.DataAnnotations.MaxLength(3)]
        public System.Tuple<int, int, int> DateOfBirth { get; set; }

        /// <summary>
        /// Place of birth
        /// </summary>
        [Newtonsoft.Json.JsonProperty("placeOfBirth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string PlaceOfBirth { get; set; }

        /// <summary>
        /// Country or birth code in ISO2 or ISO3 format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("countryOfBirth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Iso2CountryCode CountryOfBirth { get; set; }

        /// <summary>
        /// Nationality in ISO2 or ISO3 format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("nationality", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Iso2CountryCode Nationality { get; set; }

        /// <summary>
        /// Country code in ISO2 or ISO3 format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("countryCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Iso2CountryCode CountryCode { get; set; }

        /// <summary>
        /// Document expiry date
        /// </summary>
        [Newtonsoft.Json.JsonProperty("expiryDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(3)]
        [System.ComponentModel.DataAnnotations.MaxLength(3)]
        public System.Tuple<int, int, int> ExpiryDate { get; set; }

    }

    /// <summary>
    /// Contact details
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Contact
    {
        /// <summary>
        /// Phone number
        /// </summary>
        [Newtonsoft.Json.JsonProperty("phoneNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Fax number
        /// </summary>
        [Newtonsoft.Json.JsonProperty("faxNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Email address
        /// </summary>
        [Newtonsoft.Json.JsonProperty("emailAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// First address line
        /// </summary>
        [Newtonsoft.Json.JsonProperty("addressLine", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string AddressLine { get; set; }

        /// <summary>
        /// Postal code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("postalCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string PostalCode { get; set; }

        /// <summary>
        /// City name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("cityName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string CityName { get; set; }

        /// <summary>
        /// Country code in ISO2 or ISO3 format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("countryCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Iso2CountryCode CountryCode { get; set; }

        /// <summary>
        /// State code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("stateCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string StateCode { get; set; }

        /// <summary>
        /// Region or county name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("regionOrCountyName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string RegionOrCountyName { get; set; }

        /// <summary>
        /// Address type
        /// </summary>
        [Newtonsoft.Json.JsonProperty("addressType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ContactAddressType AddressType { get; set; }

    }

    /// <summary>
    /// Provider contact details
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ProviderContact
    {
        /// <summary>
        /// Provider contact last name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string LastName { get; set; }

        /// <summary>
        /// Provider contact first name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string FirstName { get; set; }

        /// <summary>
        /// Phone number
        /// </summary>
        [Newtonsoft.Json.JsonProperty("phoneNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Fax number
        /// </summary>
        [Newtonsoft.Json.JsonProperty("faxNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Email address
        /// </summary>
        [Newtonsoft.Json.JsonProperty("emailAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Provider contact type
        /// </summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ProviderContactType Type { get; set; }

    }

    /// <summary>
    /// This schema describes how flight data should be structured to be processed by the GovLink product provided by Streamlane
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Root
    {
        /// <summary>
        /// Identification of the provider movement
        /// </summary>
        [Newtonsoft.Json.JsonProperty("idExternal", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength = 1)]
        public string IdExternal { get; set; }

        /// <summary>
        /// Flight identification
        /// </summary>
        [Newtonsoft.Json.JsonProperty("flight", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Flight Flight { get; set; } = new Flight();

        [Newtonsoft.Json.JsonProperty("expectedPaxCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public int? ExpectedPaxCount { get; set; }

        /// <summary>
        /// List of bookings associated to the flight
        /// </summary>
        [Newtonsoft.Json.JsonProperty("bookings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Bookings> Bookings { get; set; }

        /// <summary>
        /// List of crew members
        /// </summary>
        [Newtonsoft.Json.JsonProperty("crews", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Crews> Crews { get; set; }

        /// <summary>
        /// List of provider contacts
        /// </summary>
        [Newtonsoft.Json.JsonProperty("providerContacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ProviderContact> ProviderContacts { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum ProvidedIsoNormNorm
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ISO2")]
        ISO2 = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ISO3")]
        ISO3 = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum ProvidedNormNorm
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ICAO")]
        ICAO = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"IATA")]
        IATA = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Station
    {
        /// <summary>
        /// Station code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IcaoOrIataStationCode Code { get; set; } = new IcaoOrIataStationCode();


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Scheduled
    {
        /// <summary>
        /// Scheduled date/time in local format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("local", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FunctionalDateTime Local { get; set; }

        /// <summary>
        /// Scheduled date/time in UTC format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("utc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FunctionalDateTime Utc { get; set; }


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Estimated
    {
        /// <summary>
        /// Scheduled identifier date/time in local format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("local", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FunctionalDateTime Local { get; set; }

        /// <summary>
        /// Scheduled identifier date/time in UTC format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("utc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FunctionalDateTime Utc { get; set; }


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Station2
    {
        /// <summary>
        /// Station code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IcaoOrIataStationCode Code { get; set; } = new IcaoOrIataStationCode();


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Scheduled2
    {
        /// <summary>
        /// Scheduled date/time in local format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("local", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FunctionalDateTime Local { get; set; }

        /// <summary>
        /// Scheduled date/time in UTC format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("utc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FunctionalDateTime Utc { get; set; }


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Station3
    {
        /// <summary>
        /// Station code
        /// </summary>
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IcaoOrIataStationCode Code { get; set; } = new IcaoOrIataStationCode();


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Estimated2
    {
        /// <summary>
        /// Scheduled identifier date/time in local format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("local", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FunctionalDateTime Local { get; set; }

        /// <summary>
        /// Scheduled identifier date/time in UTC format
        /// </summary>
        [Newtonsoft.Json.JsonProperty("utc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FunctionalDateTime Utc { get; set; }


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum DocumentType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ID_CARD")]
        ID_CARD = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PASSPORT")]
        PASSPORT = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PILOT_LICENSE")]
        PILOT_LICENSE = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum DocumentGender
    {

        [System.Runtime.Serialization.EnumMember(Value = @"MALE")]
        MALE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"FEMALE")]
        FEMALE = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"UNKNOWN")]
        UNKNOWN = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
        OTHER = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum ContactAddressType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HOME")]
        HOME = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"DESTINATION")]
        DESTINATION = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum ProviderContactType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PAX")]
        PAX = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CREW")]
        CREW = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Flight
    {
        [Newtonsoft.Json.JsonProperty("designator", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public FlightDesignator Designator { get; set; } = new FlightDesignator();

        /// <summary>
        /// Departure identifiers
        /// </summary>
        [Newtonsoft.Json.JsonProperty("departure", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public FlightIdentifierScheduledOrEstimated Departure { get; set; } = new FlightIdentifierScheduledOrEstimated();

        /// <summary>
        /// Arrival identifiers
        /// </summary>
        [Newtonsoft.Json.JsonProperty("arrival", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public FlightIdentifierScheduledOrEstimated Arrival { get; set; } = new FlightIdentifierScheduledOrEstimated();

    }

    /// <summary>
    /// Booking details
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Bookings
    {
        /// <summary>
        /// Booking creation date and time. Strongly recommended to provide it, else automatically computed
        /// </summary>
        [Newtonsoft.Json.JsonProperty("creation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FunctionalDateTime Creation { get; set; }

        /// <summary>
        /// Last booking udpate date and time. Strongly recommended to provide it, else automatically computed
        /// </summary>
        [Newtonsoft.Json.JsonProperty("update", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FunctionalDateTime Update { get; set; }

        /// <summary>
        /// Booking reference ID within the source system
        /// </summary>
        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string Reference { get; set; }

        /// <summary>
        /// Number of passengers currently booked in the flight
        /// </summary>
        [Newtonsoft.Json.JsonProperty("paxCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public int? PaxCount { get; set; }

        /// <summary>
        /// Total number of passengers expected in the flight
        /// </summary>
        [Newtonsoft.Json.JsonProperty("expectedPaxCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public int? ExpectedPaxCount { get; set; }

        /// <summary>
        /// List of passengers
        /// </summary>
        [Newtonsoft.Json.JsonProperty("paxes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Paxes> Paxes { get; set; }

    }

    /// <summary>
    /// Crew member details
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Crews
    {
        /// <summary>
        /// Crew member last name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string LastName { get; set; }

        /// <summary>
        /// Crew member first name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string FirstName { get; set; }

        /// <summary>
        /// Crew member second given name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("secondGivenName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string SecondGivenName { get; set; }

        /// <summary>
        /// Crew member type
        /// </summary>
        [Newtonsoft.Json.JsonProperty("passengerType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(28)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CrewsPassengerType PassengerType { get; set; }

        /// <summary>
        /// List of documents
        /// </summary>
        [Newtonsoft.Json.JsonProperty("documents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Document> Documents { get; set; }

        /// <summary>
        /// List of contacts
        /// </summary>
        [Newtonsoft.Json.JsonProperty("contacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Contact> Contacts { get; set; }

    }

    /// <summary>
    /// Passenger details
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Paxes
    {
        /// <summary>
        /// Passenger last name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string LastName { get; set; }

        /// <summary>
        /// Passenger first name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string FirstName { get; set; }

        /// <summary>
        /// Passenger second given name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("secondGivenName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string SecondGivenName { get; set; }

        /// <summary>
        /// Passenger type
        /// </summary>
        [Newtonsoft.Json.JsonProperty("passengerType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PaxesPassengerType PassengerType { get; set; }

        /// <summary>
        /// List of documents
        /// </summary>
        [Newtonsoft.Json.JsonProperty("documents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Document> Documents { get; set; }

        /// <summary>
        /// List of contacts
        /// </summary>
        [Newtonsoft.Json.JsonProperty("contacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Contact> Contacts { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum CrewsPassengerType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"COCKPIT_CREW")]
        COCKPIT_CREW = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CABIN_CREW")]
        CABIN_CREW = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"AIRLINE_OPERATION_MANAGEMENT")]
        AIRLINE_OPERATION_MANAGEMENT = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"NON_CREW")]
        NON_CREW = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PILOT_DEADHEAD")]
        PILOT_DEADHEAD = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.6.9.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum PaxesPassengerType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ADULT")]
        ADULT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CHILD")]
        CHILD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"INFANT")]
        INFANT = 2,

    }
}